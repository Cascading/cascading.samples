/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.concurrentinc.com/
 */

import java.text.SimpleDateFormat

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

apply plugin: 'provided-base'

ext.hadoopVersion = "2.6.0"
ext.tezVersion = "0.6.1"
ext.cascadingVersion = "3.0.0-wip-+"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'http://conjars.org/repo/' }
  maven { url 'https://repository.apache.org/content/repositories/releases/' }
}

dependencies {
  compile group: 'cascading', name: 'cascading-core', version: cascadingVersion
  compile group: 'cascading', name: 'cascading-xml', version: cascadingVersion
  compile group: 'cascading', name: 'cascading-hadoop2-tez', version: cascadingVersion

  provided( group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoopVersion )
  provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoopVersion )
  provided( group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: hadoopVersion )

  runtime group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
  runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'

  // hadoop deps
  runtime group: 'org.apache.tez', name: 'tez-api', version: tezVersion
  runtime group: 'org.apache.tez', name: 'tez-dag', version: tezVersion
  runtime group: 'org.apache.tez', name: 'tez-mapreduce', version: tezVersion
  runtime group: 'org.apache.tez', name: 'tez-yarn-timeline-history-with-acls', version: tezVersion
}

jar {
  description = "Assembles a Hadoop ready jar file"
  doFirst {
    into( 'lib' ) {
      from configurations.compile
    }
  }

  manifest {
    attributes( "Main-Class": "${archivesBaseName}/Main" )
  }
}

task distCopy( type: Copy, dependsOn: jar ) {

  into "${buildDir}/dist/${archivesBaseName}"

  from 'README.TXT'
  from 'build.gradle'
  from( 'src' ) { into 'src' }
  from( 'data' ) { into 'data' }

  from "$buildDir/libs"

}

task dist( type: Tar, dependsOn: distCopy ) {

  compression = "GZIP"
  classifier = new SimpleDateFormat( "yyyyMMdd" ).format( new Date() )

  from "${buildDir}/dist/"
}
